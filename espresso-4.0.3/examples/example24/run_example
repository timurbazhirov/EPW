#!/bin/sh

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

# function to test the exit status of a job
. ../check_failure.sh

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example tests pw.x and ph.x is several cases that require "
$ECHO "the noncollinear or the spin-orbit part of the code together "
$ECHO "with the gga."
$ECHO "ph.x is used to calculate the phonons at X and Gamma of fcc-Pt with gga,"
$ECHO "and to calculate the phonons at X and Gamma of fcc-Ni to test" 
$ECHO "the magnetic case with gga with or without spin-orbit "

# set the needed environment variables
. ../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x ph.x"
PSEUDO_LIST="PtrelPBE.RRKJ3.UPF NirelPBE.RRKJ3.UPF NisrPBE.RRKJ3.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
PH_COMMAND="$PARA_PREFIX $BIN_DIR/ph.x $PARA_POSTFIX"
$ECHO
$ECHO "  running pw.x as: $PW_COMMAND"
$ECHO "  running ph.x as: $PH_COMMAND"
$ECHO

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"


# self-consistent calculation. This example demonstrates the use of spin-orbit
# together with gga-pbe in the nonmagnetic case
cat > pt.scf.in << EOF
Pt
Pt
 &control
    calculation = 'scf'
    restart_mode='from_scratch',
    prefix='Pt_pbe',
    tprnfor = .true.,
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  2, celldm(1) =7.55, nat=  1, ntyp= 1,
    lspinorb=.true.,
    noncolin=.true.,
    starting_magnetization=0.0,
    occupations='smearing',
    degauss=0.02,
    smearing='mp',
    ecutwfc =30.0,
    ecutrho =300.0,
 /
 &electrons
    mixing_beta = 0.7,
    conv_thr =  1.0d-12
 /
ATOMIC_SPECIES
Pt  0.0    PtrelPBE.RRKJ3.UPF
ATOMIC_POSITIONS
Pt  0.0000000   0.00000000   0.0
K_POINTS AUTOMATIC
2 2 2 1 1 1
EOF

$ECHO "  running scf pw.x for Pt with gga-pbe and spin-orbit coupling...\c"
$PW_COMMAND < pt.scf.in > pt.scf.out
check_failure $?
$ECHO " done"

# Phonon at gamma. This example demonstrates the use of spin-orbit
# together with gga-pbe. Phonon at gamma.

cat > pt.phG.in << EOF
phonons of Pt at Gamma
 &inputph
  prefix='Pt_pbe',
  outdir='$TMP_DIR'
  fildyn='ptdyn',
  tr2_ph=1.0d-16,
 /
0.0 0.0 0.0
EOF
$ECHO "  running ph.x at Gamma for Pt with gga-pbe and spin-orbit coupling...\c"
$PH_COMMAND < pt.phG.in > pt.phG.out
check_failure $?
$ECHO " done"

cat > pt.nscf.in << EOF
Pt
Pt
 &control
    calculation = 'phonon'
    restart_mode='from_scratch',
    prefix='Pt_pbe',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  2, celldm(1) =7.55, nat=  1, ntyp= 1,
    lspinorb=.true.,
    noncolin=.true.,
    starting_magnetization=0.0,
    occupations='smearing',
    degauss=0.02,
    smearing='mp',
    ecutwfc =30.0,
    ecutrho =300.0,
 /
 &electrons
    mixing_beta = 0.7,
    conv_thr =  1.0d-12
 /
 &phonon
 xqq(1)=1.d0,
 xqq(2)=0.d0,
 xqq(3)=0.d0,
 /
ATOMIC_SPECIES
Pt  0.0    PtrelPBE.RRKJ3.UPF
ATOMIC_POSITIONS
Pt  0.0000000   0.00000000   0.0
K_POINTS AUTOMATIC
2 2 2 1 1 1
EOF
$ECHO "  running nscf pw.x for Pt with gga-pbe and spin-orbit coupling...\c"
$PW_COMMAND < pt.nscf.in > pt.nscf.out
check_failure $?
$ECHO " done"

# Phonon at X. This example demonstrates the use of spin-orbit
# together with gga-pbe. 

cat > pt.phX.in << EOF
phonons of Pt at X
 &inputph
  prefix='Pt_pbe',
  outdir='$TMP_DIR'
  fildyn='ptdyn',
  tr2_ph=1.0d-16,
 /
1.0 0.0 0.0
EOF
$ECHO "  running ph.x at X for Pt with gga-pbe and spin-orbit coupling...\c"
$PH_COMMAND < pt.phX.in > pt.phX.out
check_failure $?
$ECHO " done"
#
# self-consistent calculation. This example demonstrates the use of the 
# noncollinear calculation together with gga-pbe in the spin-polarized case. 
#
cat > ni.scf.in << EOF
 &control
    calculation='scf'
    restart_mode='from_scratch',
    tprnfor = .true.
    prefix='ni',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=2, celldm(1) =6.65, nat=  1, ntyp= 1,
    noncolin=.true.,
    starting_magnetization(1)=0.5,
    degauss=0.02,
    smearing='mp',
    angle1(1)=90
    angle2(1)=90
    occupations='smearing',
    ecutwfc =27.0
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-12
    mixing_beta = 0.7
 /
ATOMIC_SPECIES
Ni  0.0  NisrPBE.RRKJ3.UPF
ATOMIC_POSITIONS
Ni 0.00 0.00 0.00
K_POINTS AUTOMATIC
4 4 4 1 1 1
EOF
$ECHO "  running scf pw.x for noncollinear Ni with gga-pbe...\c"
$PW_COMMAND < ni.scf.in > ni.scf.out
check_failure $?
$ECHO " done"

# The phonon at gamma 

cat > ni.phG.in << EOF
phonons of Ni at Gamma
 &inputph
  tr2_ph=1.0d-16,
  prefix='ni',
  fildyn='niG.dyn',
  outdir='$TMP_DIR'
 /
0.0 0.0 0.0
EOF
$ECHO "  running ph.x at Gamma for noncollinear Ni with gga-pbe ...\c"
$PH_COMMAND < ni.phG.in > ni.phG.out
check_failure $?
$ECHO " done"

cat > ni.nscf.in << EOF
 &control
    calculation='phonon'
    restart_mode='from_scratch',
    tprnfor = .true.
    prefix='ni',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  2, celldm(1) =6.65, nat=  1, ntyp= 1,
    noncolin=.true.,
    starting_magnetization(1)=0.5,
    angle1(1)=90
    angle2(1)=90
    degauss=0.02,
    smearing='mp',
    occupations='smearing',
    ecutwfc =27.0
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-12
    mixing_beta = 0.7
 /
 &phonon
    xqq(1) = .00, xqq(2) = .00, xqq(3) = 1.00
 /
ATOMIC_SPECIES
Ni  0.0  NisrPBE.RRKJ3.UPF
ATOMIC_POSITIONS
Ni 0.00 0.00 0.00
K_POINTS AUTOMATIC
4 4 4 1 1 1
EOF
$ECHO "  running nscf pw.x for noncollinear Ni with gga-pbe...\c"
$PW_COMMAND < ni.nscf.in > ni.nscf.out
check_failure $?
$ECHO " done"

# Phonon at X 

cat > ni.phX.in << EOF
phonons of Ni at X
 &inputph
  tr2_ph=1.0d-16,
  prefix='ni',
  fildyn='nix.dyn',
  outdir='$TMP_DIR/'
 /
0.0 0.0 1.0
EOF

$ECHO "  running ph.x at X for noncollinear Ni with gga-pbe ...\c"
$PH_COMMAND < ni.phX.in > ni.phX.out
check_failure $?
$ECHO " done"

# self-consistent calculation. This example demonstrates the use of the 
# noncollinear calculations together with gga-pbe and spin-orbit
# in the spin-polarized case. 

cat > ni_so.scf.in << EOF
 &control
    calculation='scf'
    restart_mode='from_scratch',
    tprnfor = .true.
    prefix='ni_so',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=2, celldm(1) =6.65, nat=  1, ntyp= 1,
    lspinorb=.true.,
    noncolin=.true.,
    starting_magnetization(1)=0.5,
    degauss=0.02,
    angle1(1)=90,
    smearing='mp',
    occupations='smearing',
    ecutwfc =27.0
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-12
    mixing_beta = 0.7
 /
ATOMIC_SPECIES
Ni  0.0  NirelPBE.RRKJ3.UPF
ATOMIC_POSITIONS
Ni 0.00 0.00 0.00
K_POINTS AUTOMATIC
4 4 4 1 1 1
EOF
$ECHO "  running scf pw.x for Ni with gga-pbe and spin-orbit...\c"
$PW_COMMAND < ni_so.scf.in > ni_so.scf.out
check_failure $?
$ECHO " done"

# The phonon at gamma 

cat > ni_so.phG.in << EOF
phonons of Ni at Gamma
 &inputph
  tr2_ph=1.0d-16,
  prefix='ni_so',
  fildyn='niG.dyn',
  outdir='$TMP_DIR'
 /
0.0 0.0 0.0
EOF
$ECHO "  running ph.x at Gamma for Ni with gga-pbe and spin_orbit...\c"
$PH_COMMAND < ni_so.phG.in > ni_so.phG.out
check_failure $?
$ECHO " done"

cat > ni_so.nscf.in << EOF
 &control
    calculation='phonon'
    restart_mode='from_scratch',
    tprnfor = .true.
    prefix='ni_so',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  2, celldm(1) =6.65, nat=  1, ntyp= 1,
    lspinorb=.true.,
    noncolin=.true.,
    starting_magnetization(1)=0.5,
    angle1(1)=90,
    degauss=0.02,
    smearing='mp',
    occupations='smearing',
    ecutwfc =27.0
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-12
    mixing_beta = 0.7
 /
 &phonon
    xqq(1) = .00, xqq(2) = .00, xqq(3) = 1.00
 /
ATOMIC_SPECIES
Ni  0.0 NirelPBE.RRKJ3.UPF
ATOMIC_POSITIONS
Ni 0.00 0.00 0.00
K_POINTS AUTOMATIC
4 4 4 1 1 1
EOF
$ECHO "  running nscf pw.x for Ni with gga-pbe and spin-orbit...\c"
$PW_COMMAND < ni_so.nscf.in > ni_so.nscf.out
check_failure $?
$ECHO " done"

# The phonon at X 

cat > ni_so.phX.in << EOF
phonons of Ni at X
 &inputph
  tr2_ph=1.0d-14,
  prefix='ni_so',
  fildyn='nix.dyn',
  outdir='$TMP_DIR/'
 /
0.0 0.0 1.0
EOF

$ECHO "  running ph.x at X for Ni with gga-pbe with spin-orbit...\c"
$PH_COMMAND < ni_so.phX.in > ni_so.phX.out
check_failure $?
$ECHO " done"

$ECHO
$ECHO "$EXAMPLE_DIR: done"
